S -> USING_BLOCK NAMESPACE $
USING_BLOCK -> using NAME USING_BLOCK
USING_BLOCK -> e
NAMESPACE -> namespace NAME{CLASS}
CLASS -> class NAME{MAIN FUNC_BLOCK}
MAIN -> static void Main NAME(string[] args){STATEMENT_BLOCK}

FUNC_BLOCK -> FUNC FUNC_BLOCK
FUNC_BLOCK -> e
FUNC -> static RET_TYPE NAME(INPUT_BLOCK){STATEMENT_BLOCK}

INPUT_BLOCK -> INPUT_START
INPUT_BLOCK -> e
INPUT_START -> TYPE NAME INPUT  
INPUT -> ,TYPE NAME INPUT
INPUT -> e

STATEMENT_BLOCK -> STATEMENT STATEMENT_BLOCK
STATEMENT_BLOCK -> e
STATEMENT -> VAR_DEC|VAR_ASSIGN|IF|WHILE|FUNC_STATEMENT|RETURN


VAR_DEC -> TYPE NAME = EXPRESSION;
VAR_ASSIGN -> NAME = EXPRESSION;
RETURN -> return NAME;


EXPRESSION -> LITERAL|FUNC_CALL|EVALUATION|(EXPRESSION)
LITERAL -> STRING_LIT|INT_LIT|DOUBLE_LIT|BOOL_LIT

EVALUATION -> EXPRESSION OPERATOR EXPRESSION

FUNC_STATEMENT -> FUNC_CALL;
FUNC_CALL -> NAME(ARGS_BLOCK)
FUNC_CALL -> Console.Writeline(ARGS_BLOCK)
ARGS_BLOCK -> e
ARGS_BLOCK -> ARGS_START
ARGS_START -> NAME ARG
ARG -> ,NAME ARG
ARG -> e

IF -> if(EXPRESSION){STATEMENT_BLOCK} ELSE
ELSE -> else{STATEMENT_BLOCK}
WHILE -> while(EXPRESSION){STATEMENT_BLOCK}

RET_TYPE -> void | TYPE
TYPE -> int|double|bool|string
STRING_LIT -> "NAME"